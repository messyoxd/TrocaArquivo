// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: comunicacao.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from comunicacao.proto</summary>
public static partial class ComunicacaoReflection {

  #region Descriptor
  /// <summary>File descriptor for comunicacao.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ComunicacaoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChFjb211bmljYWNhby5wcm90byJGCghBbWJpZW50ZRIMCgROb21lGAEgASgJ",
          "EgkKAXgYAiABKAUSCQoBeRgDIAEoBRIWCg5BbWJpZW50ZVNwcml0ZRgEIAEo",
          "BSKWAQoLRGlzcG9zaXRpdm8SDAoETm9tZRgBIAEoCRIKCgJJUBgCIAEoCRIN",
          "CgVQb3J0YRgDIAEoCRIJCgF4GAQgASgFEgkKAXkYBSABKAUSEAoIcm90YXRp",
          "b24YBiABKAUSGQoRRGlzcG9zaXRpdm9TcHJpdGUYByABKAUSGwoIYW1iaWVu",
          "dGUYCCABKAsyCS5BbWJpZW50ZSJdCg1QYWNvdGVDb25leGFvEiEKC2Rpc3Bv",
          "c2l0aXZvGAEgASgLMgwuRGlzcG9zaXRpdm8SEgoKSVBTZXJ2aWRvchgCIAEo",
          "CRIVCg1Qb3J0YVNlcnZpZG9yGAMgASgJIjYKD1Jlc3Bvc3RhQ29uZXhhbxIR",
          "CglSZXN1bHRhZG8YASABKAgSEAoITWVuc2FnZW0YAiABKAkiVAoHQXJxdWl2",
          "bxIpChNkaXNwb3NpdGl2b1JlY2VwdG9yGAEgASgLMgwuRGlzcG9zaXRpdm8S",
          "DAoETm9tZRgCIAEoCRIQCghDb250ZXVkbxgDIAEoDCIfCgpKc29uUGFja2V0",
          "EhEKCWpzb25CeXRlcxgBIAEoCTLdAwoPVHJvY2FBcnF1aXZvUlBDEi4KCENv",
          "bmVjdGFyEg4uUGFjb3RlQ29uZXhhbxoQLlJlc3Bvc3RhQ29uZXhhbyIAEjUK",
          "D0NvbmVjdGFyRGV2b2x0YRIOLlBhY290ZUNvbmV4YW8aEC5SZXNwb3N0YUNv",
          "bmV4YW8iABI+Ch5BZGljaW9uYXJEaXNwb3NpdGl2b0VtQW1iaWVudGUSDC5E",
          "aXNwb3NpdGl2bxoMLkRpc3Bvc2l0aXZvIgASJwoNQ3JpYXJBbWJpZW50ZRIJ",
          "LkFtYmllbnRlGgkuQW1iaWVudGUiABI0ChBNb3ZlckRpc3Bvc2l0aXZvEgwu",
          "RGlzcG9zaXRpdm8aEC5SZXNwb3N0YUNvbmV4YW8iABItCg1NYW5kYXJBcnF1",
          "aXZvEgguQXJxdWl2bxoQLlJlc3Bvc3RhQ29uZXhhbyIAEi4KDlJlY2ViZXJB",
          "cnF1aXZvEgguQXJxdWl2bxoQLlJlc3Bvc3RhQ29uZXhhbyIAEjEKElJlcXVp",
          "c2l0YXJVc3VhcmlvcxIMLkRpc3Bvc2l0aXZvGgsuSnNvblBhY2tldCIAEjIK",
          "E1JlcXVpc2l0YXJBbWJpZW50ZXMSDC5EaXNwb3NpdGl2bxoLLkpzb25QYWNr",
          "ZXQiAGIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Ambiente), global::Ambiente.Parser, new[]{ "Nome", "X", "Y", "AmbienteSprite" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Dispositivo), global::Dispositivo.Parser, new[]{ "Nome", "IP", "Porta", "X", "Y", "Rotation", "DispositivoSprite", "Ambiente" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacoteConexao), global::PacoteConexao.Parser, new[]{ "Dispositivo", "IPServidor", "PortaServidor" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RespostaConexao), global::RespostaConexao.Parser, new[]{ "Resultado", "Mensagem" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Arquivo), global::Arquivo.Parser, new[]{ "DispositivoReceptor", "Nome", "Conteudo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::JsonPacket), global::JsonPacket.Parser, new[]{ "JsonBytes" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Ambiente : pb::IMessage<Ambiente> {
  private static readonly pb::MessageParser<Ambiente> _parser = new pb::MessageParser<Ambiente>(() => new Ambiente());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Ambiente> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ComunicacaoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Ambiente() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Ambiente(Ambiente other) : this() {
    nome_ = other.nome_;
    x_ = other.x_;
    y_ = other.y_;
    ambienteSprite_ = other.ambienteSprite_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Ambiente Clone() {
    return new Ambiente(this);
  }

  /// <summary>Field number for the "Nome" field.</summary>
  public const int NomeFieldNumber = 1;
  private string nome_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nome {
    get { return nome_; }
    set {
      nome_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 2;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 3;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "AmbienteSprite" field.</summary>
  public const int AmbienteSpriteFieldNumber = 4;
  private int ambienteSprite_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AmbienteSprite {
    get { return ambienteSprite_; }
    set {
      ambienteSprite_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Ambiente);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Ambiente other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Nome != other.Nome) return false;
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (AmbienteSprite != other.AmbienteSprite) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Nome.Length != 0) hash ^= Nome.GetHashCode();
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (AmbienteSprite != 0) hash ^= AmbienteSprite.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Nome.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Nome);
    }
    if (X != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Y);
    }
    if (AmbienteSprite != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(AmbienteSprite);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Nome.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nome);
    }
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
    }
    if (AmbienteSprite != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AmbienteSprite);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Ambiente other) {
    if (other == null) {
      return;
    }
    if (other.Nome.Length != 0) {
      Nome = other.Nome;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    if (other.AmbienteSprite != 0) {
      AmbienteSprite = other.AmbienteSprite;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Nome = input.ReadString();
          break;
        }
        case 16: {
          X = input.ReadInt32();
          break;
        }
        case 24: {
          Y = input.ReadInt32();
          break;
        }
        case 32: {
          AmbienteSprite = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class Dispositivo : pb::IMessage<Dispositivo> {
  private static readonly pb::MessageParser<Dispositivo> _parser = new pb::MessageParser<Dispositivo>(() => new Dispositivo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Dispositivo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ComunicacaoReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Dispositivo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Dispositivo(Dispositivo other) : this() {
    nome_ = other.nome_;
    iP_ = other.iP_;
    porta_ = other.porta_;
    x_ = other.x_;
    y_ = other.y_;
    rotation_ = other.rotation_;
    dispositivoSprite_ = other.dispositivoSprite_;
    ambiente_ = other.ambiente_ != null ? other.ambiente_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Dispositivo Clone() {
    return new Dispositivo(this);
  }

  /// <summary>Field number for the "Nome" field.</summary>
  public const int NomeFieldNumber = 1;
  private string nome_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nome {
    get { return nome_; }
    set {
      nome_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "IP" field.</summary>
  public const int IPFieldNumber = 2;
  private string iP_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string IP {
    get { return iP_; }
    set {
      iP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Porta" field.</summary>
  public const int PortaFieldNumber = 3;
  private string porta_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Porta {
    get { return porta_; }
    set {
      porta_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 4;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 5;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "rotation" field.</summary>
  public const int RotationFieldNumber = 6;
  private int rotation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Rotation {
    get { return rotation_; }
    set {
      rotation_ = value;
    }
  }

  /// <summary>Field number for the "DispositivoSprite" field.</summary>
  public const int DispositivoSpriteFieldNumber = 7;
  private int dispositivoSprite_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int DispositivoSprite {
    get { return dispositivoSprite_; }
    set {
      dispositivoSprite_ = value;
    }
  }

  /// <summary>Field number for the "ambiente" field.</summary>
  public const int AmbienteFieldNumber = 8;
  private global::Ambiente ambiente_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Ambiente Ambiente {
    get { return ambiente_; }
    set {
      ambiente_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Dispositivo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Dispositivo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Nome != other.Nome) return false;
    if (IP != other.IP) return false;
    if (Porta != other.Porta) return false;
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (Rotation != other.Rotation) return false;
    if (DispositivoSprite != other.DispositivoSprite) return false;
    if (!object.Equals(Ambiente, other.Ambiente)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Nome.Length != 0) hash ^= Nome.GetHashCode();
    if (IP.Length != 0) hash ^= IP.GetHashCode();
    if (Porta.Length != 0) hash ^= Porta.GetHashCode();
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (Rotation != 0) hash ^= Rotation.GetHashCode();
    if (DispositivoSprite != 0) hash ^= DispositivoSprite.GetHashCode();
    if (ambiente_ != null) hash ^= Ambiente.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Nome.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Nome);
    }
    if (IP.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(IP);
    }
    if (Porta.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Porta);
    }
    if (X != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Y);
    }
    if (Rotation != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Rotation);
    }
    if (DispositivoSprite != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(DispositivoSprite);
    }
    if (ambiente_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(Ambiente);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Nome.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nome);
    }
    if (IP.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(IP);
    }
    if (Porta.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Porta);
    }
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
    }
    if (Rotation != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rotation);
    }
    if (DispositivoSprite != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DispositivoSprite);
    }
    if (ambiente_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ambiente);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Dispositivo other) {
    if (other == null) {
      return;
    }
    if (other.Nome.Length != 0) {
      Nome = other.Nome;
    }
    if (other.IP.Length != 0) {
      IP = other.IP;
    }
    if (other.Porta.Length != 0) {
      Porta = other.Porta;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    if (other.Rotation != 0) {
      Rotation = other.Rotation;
    }
    if (other.DispositivoSprite != 0) {
      DispositivoSprite = other.DispositivoSprite;
    }
    if (other.ambiente_ != null) {
      if (ambiente_ == null) {
        Ambiente = new global::Ambiente();
      }
      Ambiente.MergeFrom(other.Ambiente);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Nome = input.ReadString();
          break;
        }
        case 18: {
          IP = input.ReadString();
          break;
        }
        case 26: {
          Porta = input.ReadString();
          break;
        }
        case 32: {
          X = input.ReadInt32();
          break;
        }
        case 40: {
          Y = input.ReadInt32();
          break;
        }
        case 48: {
          Rotation = input.ReadInt32();
          break;
        }
        case 56: {
          DispositivoSprite = input.ReadInt32();
          break;
        }
        case 66: {
          if (ambiente_ == null) {
            Ambiente = new global::Ambiente();
          }
          input.ReadMessage(Ambiente);
          break;
        }
      }
    }
  }

}

public sealed partial class PacoteConexao : pb::IMessage<PacoteConexao> {
  private static readonly pb::MessageParser<PacoteConexao> _parser = new pb::MessageParser<PacoteConexao>(() => new PacoteConexao());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacoteConexao> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ComunicacaoReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacoteConexao() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacoteConexao(PacoteConexao other) : this() {
    dispositivo_ = other.dispositivo_ != null ? other.dispositivo_.Clone() : null;
    iPServidor_ = other.iPServidor_;
    portaServidor_ = other.portaServidor_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacoteConexao Clone() {
    return new PacoteConexao(this);
  }

  /// <summary>Field number for the "dispositivo" field.</summary>
  public const int DispositivoFieldNumber = 1;
  private global::Dispositivo dispositivo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Dispositivo Dispositivo {
    get { return dispositivo_; }
    set {
      dispositivo_ = value;
    }
  }

  /// <summary>Field number for the "IPServidor" field.</summary>
  public const int IPServidorFieldNumber = 2;
  private string iPServidor_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string IPServidor {
    get { return iPServidor_; }
    set {
      iPServidor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "PortaServidor" field.</summary>
  public const int PortaServidorFieldNumber = 3;
  private string portaServidor_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PortaServidor {
    get { return portaServidor_; }
    set {
      portaServidor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacoteConexao);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacoteConexao other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Dispositivo, other.Dispositivo)) return false;
    if (IPServidor != other.IPServidor) return false;
    if (PortaServidor != other.PortaServidor) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (dispositivo_ != null) hash ^= Dispositivo.GetHashCode();
    if (IPServidor.Length != 0) hash ^= IPServidor.GetHashCode();
    if (PortaServidor.Length != 0) hash ^= PortaServidor.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (dispositivo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Dispositivo);
    }
    if (IPServidor.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(IPServidor);
    }
    if (PortaServidor.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(PortaServidor);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (dispositivo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dispositivo);
    }
    if (IPServidor.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(IPServidor);
    }
    if (PortaServidor.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PortaServidor);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacoteConexao other) {
    if (other == null) {
      return;
    }
    if (other.dispositivo_ != null) {
      if (dispositivo_ == null) {
        Dispositivo = new global::Dispositivo();
      }
      Dispositivo.MergeFrom(other.Dispositivo);
    }
    if (other.IPServidor.Length != 0) {
      IPServidor = other.IPServidor;
    }
    if (other.PortaServidor.Length != 0) {
      PortaServidor = other.PortaServidor;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (dispositivo_ == null) {
            Dispositivo = new global::Dispositivo();
          }
          input.ReadMessage(Dispositivo);
          break;
        }
        case 18: {
          IPServidor = input.ReadString();
          break;
        }
        case 26: {
          PortaServidor = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class RespostaConexao : pb::IMessage<RespostaConexao> {
  private static readonly pb::MessageParser<RespostaConexao> _parser = new pb::MessageParser<RespostaConexao>(() => new RespostaConexao());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RespostaConexao> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ComunicacaoReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RespostaConexao() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RespostaConexao(RespostaConexao other) : this() {
    resultado_ = other.resultado_;
    mensagem_ = other.mensagem_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RespostaConexao Clone() {
    return new RespostaConexao(this);
  }

  /// <summary>Field number for the "Resultado" field.</summary>
  public const int ResultadoFieldNumber = 1;
  private bool resultado_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Resultado {
    get { return resultado_; }
    set {
      resultado_ = value;
    }
  }

  /// <summary>Field number for the "Mensagem" field.</summary>
  public const int MensagemFieldNumber = 2;
  private string mensagem_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Mensagem {
    get { return mensagem_; }
    set {
      mensagem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RespostaConexao);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RespostaConexao other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Resultado != other.Resultado) return false;
    if (Mensagem != other.Mensagem) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Resultado != false) hash ^= Resultado.GetHashCode();
    if (Mensagem.Length != 0) hash ^= Mensagem.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Resultado != false) {
      output.WriteRawTag(8);
      output.WriteBool(Resultado);
    }
    if (Mensagem.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Mensagem);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Resultado != false) {
      size += 1 + 1;
    }
    if (Mensagem.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Mensagem);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RespostaConexao other) {
    if (other == null) {
      return;
    }
    if (other.Resultado != false) {
      Resultado = other.Resultado;
    }
    if (other.Mensagem.Length != 0) {
      Mensagem = other.Mensagem;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Resultado = input.ReadBool();
          break;
        }
        case 18: {
          Mensagem = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class Arquivo : pb::IMessage<Arquivo> {
  private static readonly pb::MessageParser<Arquivo> _parser = new pb::MessageParser<Arquivo>(() => new Arquivo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Arquivo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ComunicacaoReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Arquivo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Arquivo(Arquivo other) : this() {
    dispositivoReceptor_ = other.dispositivoReceptor_ != null ? other.dispositivoReceptor_.Clone() : null;
    nome_ = other.nome_;
    conteudo_ = other.conteudo_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Arquivo Clone() {
    return new Arquivo(this);
  }

  /// <summary>Field number for the "dispositivoReceptor" field.</summary>
  public const int DispositivoReceptorFieldNumber = 1;
  private global::Dispositivo dispositivoReceptor_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Dispositivo DispositivoReceptor {
    get { return dispositivoReceptor_; }
    set {
      dispositivoReceptor_ = value;
    }
  }

  /// <summary>Field number for the "Nome" field.</summary>
  public const int NomeFieldNumber = 2;
  private string nome_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nome {
    get { return nome_; }
    set {
      nome_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Conteudo" field.</summary>
  public const int ConteudoFieldNumber = 3;
  private pb::ByteString conteudo_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Conteudo {
    get { return conteudo_; }
    set {
      conteudo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Arquivo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Arquivo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(DispositivoReceptor, other.DispositivoReceptor)) return false;
    if (Nome != other.Nome) return false;
    if (Conteudo != other.Conteudo) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (dispositivoReceptor_ != null) hash ^= DispositivoReceptor.GetHashCode();
    if (Nome.Length != 0) hash ^= Nome.GetHashCode();
    if (Conteudo.Length != 0) hash ^= Conteudo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (dispositivoReceptor_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(DispositivoReceptor);
    }
    if (Nome.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Nome);
    }
    if (Conteudo.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(Conteudo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (dispositivoReceptor_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DispositivoReceptor);
    }
    if (Nome.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nome);
    }
    if (Conteudo.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Conteudo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Arquivo other) {
    if (other == null) {
      return;
    }
    if (other.dispositivoReceptor_ != null) {
      if (dispositivoReceptor_ == null) {
        DispositivoReceptor = new global::Dispositivo();
      }
      DispositivoReceptor.MergeFrom(other.DispositivoReceptor);
    }
    if (other.Nome.Length != 0) {
      Nome = other.Nome;
    }
    if (other.Conteudo.Length != 0) {
      Conteudo = other.Conteudo;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (dispositivoReceptor_ == null) {
            DispositivoReceptor = new global::Dispositivo();
          }
          input.ReadMessage(DispositivoReceptor);
          break;
        }
        case 18: {
          Nome = input.ReadString();
          break;
        }
        case 26: {
          Conteudo = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class JsonPacket : pb::IMessage<JsonPacket> {
  private static readonly pb::MessageParser<JsonPacket> _parser = new pb::MessageParser<JsonPacket>(() => new JsonPacket());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<JsonPacket> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ComunicacaoReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public JsonPacket() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public JsonPacket(JsonPacket other) : this() {
    jsonBytes_ = other.jsonBytes_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public JsonPacket Clone() {
    return new JsonPacket(this);
  }

  /// <summary>Field number for the "jsonBytes" field.</summary>
  public const int JsonBytesFieldNumber = 1;
  private string jsonBytes_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string JsonBytes {
    get { return jsonBytes_; }
    set {
      jsonBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as JsonPacket);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(JsonPacket other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (JsonBytes != other.JsonBytes) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (JsonBytes.Length != 0) hash ^= JsonBytes.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (JsonBytes.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(JsonBytes);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (JsonBytes.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonBytes);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(JsonPacket other) {
    if (other == null) {
      return;
    }
    if (other.JsonBytes.Length != 0) {
      JsonBytes = other.JsonBytes;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          JsonBytes = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
